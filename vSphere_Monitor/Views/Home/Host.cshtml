<div class="jumbotron">
    <h1 id="host"></h1>
</div>

<div class="row mb-5">
    <div class="col-md-6">
        <h2 id="cputitle" class="text-center">Consommation CPU</h2>
        <div class="text-center">
            <p><span class="mr-5 ml-2" id="cpu_used"></span><span id="cpu_total"></span></p>
        </div>
        <div class="rectangleEmpty m-auto">
            <div id="cpu"></div>
        </div>
    </div>
    <div class="col-md-6">
        <h2 id="ramtitle" class="text-center">Consommation RAM</h2>
        <div class="text-center">
            <p><span class="mr-5 ml-2" id="ram_used"></span><span id="ram_total"></span></p>
        </div>
        <div class="rectangleEmpty m-auto">
            <div id="ram"></div>
        </div>
    </div>
    
</div>
<div class="row mb-5">
    <div class="col">
        <h2 id="localStoragetitle" class="text-center">Stockage local</h2>
        <div class="text-center">
            <p><span class="mr-5 ml-2" id="local_storage_used"></span><span id="local_storage_total"></span></p>
        </div>
        <div class="rectangleEmpty m-auto">
            <div id="localStorage"></div>
        </div>
    </div>
</div>

<div class="row mb-5">
    <div class="col-md-6">
        <h2 id="vsanCacheStoragetitle" class="text-center">Stockage VSAN - Cache</h2>
        <div class="text-center">
            <p><span class="mr-5 ml-2" id="vsancache_storage_used"></span><span id="vsancache_storage_total"></span></p>
        </div>
        <div class="rectangleEmpty m-auto">
            <div id="vsanCacheStorage"></div>
        </div>
    </div>
    <div class="col-md-6">
        <h2 id="vsanCapacityStoragetitle" class="text-center">Stockage VSAN - Capacité</h2>
        <div class="text-center">
            <p><span class="mr-5 ml-2" id="vsancapacity_storage_used"></span><span id="vsancapacity_storage_total"></span></p>
        </div>
        <div class="rectangleEmpty m-auto">
            <div id="vsanCapacityStorage"></div>
        </div>
    </div>
</div>


<div class="jumbotron pt-3 pb-3" id="vmContainer">
    <div class="row">
        <h2 class="text-center">Machines virtuelles</h2>
    </div>

    <div class="row text-center">
        <div class="col" id="0">
            <p id="vmName"> Nom : </p>
            <p id="vmCpu"> Nombre de CPU : </p>
            <p id="vmMemory"> Mémoire : </p>
            <p id="vmState">État : </p>
        </div>
    </div>
</div>


@section scripts {
    <script>

        function update() {
            // Using the core $.ajax() method
            $.ajax({

                // The URL for the request
                url: '@Url.Action("GetHostInfo", "Home")',

                // The data to send (will be converted to a query string)
                // format = name of value : value
                data: {
                    hostId: "@ViewBag.HostID",
                },

                // Whether this is a POST or GET request
                type: "POST",

                // The type of data we expect back
                dataType: "json",
            })
            // Code to run if the request succeeds (is done);
            // The response is passed to the function
            .done(function (data) {
                var host = data;

                $('#host').html('ESXi - ' + host.Adress);

                var percentage = 300;

                var cpudivision = host.Cpu_usage / host.Cpu_total;
                var cpuresult = cpudivision * percentage;

                var ramdivision = host.Memory_usage / host.Memory_total;
                var ramresult = ramdivision * percentage;

                $('#cpu').width(cpuresult);
                $('#cpu_used').text('Utilisé : ' + host.Cpu_usage + ' [Mhz]');;
                $('#cpu_total').text('Total : ' + host.Cpu_total + ' [Mhz]');

                if (cpudivision * 100 <= 40) {
                    $('#cpu').addClass('rectangleGreen');
                } else if (cpudivision * 100 <= 70) {
                    $('#cpu').addClass('rectangleOrange');
                } else {
                    $('#cpu').addClass('rectangleRed');
                }

                $('#ram').width(ramresult);
                var unit = '';
                if (host.Memory_usage < 1) {
                    unit = '[Mb]';
                } else {
                    unit = '[Gb]';
                }
                $('#ram_used').text('Utilisé : ' + host.Memory_usage + ' ' + unit);;
                $('#ram_total').text('Total : ' + host.Memory_total + ' ' + unit);

                if (ramdivision * 100 <= 40) {
                    $('#ram').addClass('rectangleGreen');
                } else if (ramdivision * 100 <= 70) {
                    $('#ram').addClass('rectangleOrange');
                } else {
                    $('#ram').addClass('rectangleRed');
                }

                $.each(host.LocalDisks, function (k, v) {

                    var stordivision = v.CapacityRounded / v.FreeRounded;
                    var storresult = stordivision * 10;
                    var usedSpace = v.CapacityRounded - v.FreeRounded;

                    $('#localStorage').width(storresult);

                    $('#local_storage_used').text('Utilisé : ' + usedSpace + ' ' + unit);;
                    $('#local_storage_total').text('Total : ' + v.CapacityRounded + ' ' + unit);

                    if (stordivision <= 40) {
                        $('#localStorage').addClass('rectangleGreen');
                    } else if (stordivision <= 70) {
                        $('#localStorage').addClass('rectangleOrange');
                    } else {
                        $('#localStorage').addClass('rectangleRed');
                    }
                });

                $.each(host.VSANdisks, function (k, v) {
                    var storUsed = (v.CapacityGB * v.UsedPercent) / 100;
                    if (v.IsCacheDisk) {

                        $('#vsanCacheStorage').width(v.UsedPercent);

                        $('#vsancache_storage_used').text('Utilisé : ' + storUsed + ' ' + unit);;
                        $('#vsancache_storage_total').text('Total : ' + v.CapacityGB + ' ' + unit);

                        if (v.UsedPercent <= 40) {
                            $('#vsanCacheStorage').addClass('rectangleGreen');
                        } else if (v.UsedPercent <= 70) {
                            $('#vsanCacheStorage').addClass('rectangleOrange');
                        } else {
                            $('#vsanCacheStorage').addClass('rectangleRed');
                        }
                    } else {

                        $('#vsanCapacityStorage').width(v.UsedPercent);

                        $('#vsancapacity_storage_used').text('Utilisé : ' + storUsed + ' ' + unit);;
                        $('#vsancapacity_storage_total').text('Total : ' + v.CapacityGB + ' ' + unit);

                        if (v.UsedPercent <= 40) {
                            $('#vsanCapacityStorage').addClass('rectangleGreen');
                        } else if (v.UsedPercent <= 70) {
                            $('#vsanCapacityStorage').addClass('rectangleOrange');
                        } else {
                            $('#vsanCapacityStorage').addClass('rectangleRed');
                        }
                    }
                });

                var vmNumber = 0;
                $.each(host.Vms, function (k, v) {
                    var vm = $(this)[0];
                    var unit = '';
                    if (vm.Memory < 1) {
                        unit = '[Mb]';
                        vm.Memory = vm.Memory * 1000;
                    } else {
                        unit = '[Gb]';
                    }
                    var state = '';
                    if (vm.State == 0) {
                        state = 'OFF';
                    } else {
                        state = 'ON'
                    }

                    if ($('#' + vmNumber).length > 0) {
                        if ($('#' + vmNumber).attr('id') == vmNumber) {
                            $('#' + vmNumber + ' > p#vmName').text('Nom : ' + vm.Name);
                            $('#' + vmNumber + ' > p#vmCpu').text('Nombre de CPU : ' + vm.Cpu_number);
                            $('#' + vmNumber + ' > p#vmMemory').text(' Mémoire : ' + vm.Memory + ' ' + unit);
                            $('#' + vmNumber + ' > p#vmState').text('État : [' + state + ']');

                        }
                    } else {
                        if ((vmNumber % 2) != 0 && vmNumber > 1) {
                            $('#vmContainer').append('<div class="row text-center"><div class="col" id="' + vmNumber + '"><p id = "vmName" > Nom : ' + vm.Name + '</p><p id="vmCpu"> Nombre de CPU : ' + vm.Cpu_number + '</p><p id="vmMemory"> Mémoire : ' + + vm.Memory + ' ' + unit + '</p><p id="vmState">État : [' + state + ']</p></div></div>');

                        } else {
                            $('#vmContainer > div.row').last().append('<div class="col" id="' + vmNumber + '"><p id = "vmName" > Nom : ' + vm.Name + '</p><p id="vmCpu"> Nombre de CPU : ' + vm.Cpu_number + '</p><p id="vmMemory"> Mémoire : ' + + vm.Memory + ' ' + unit + '</p><p id="vmState">État : [' + state + ']</p></div>');

                        }
                    }
                    vmNumber++;
                });
            })
            // Code to run if the request fails; the raw request and
            // status codes are passed to the function
            .fail(function( xhr, status, errorThrown ) {
                //alert( "Sorry, there was a problem!" );
                //console.log( "Error: " + errorThrown );
                //console.log( "Status: " + status );
                //console.dir( xhr );
            })
        }
        //automatic ajax call every X seconds
        setInterval(function () {
            update();
        }, 30000);

        $(document).ready(function () {
            update();
        })
    </script>
}